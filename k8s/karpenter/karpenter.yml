apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: default
spec:
  template:
    spec:
      requirements:
        - key: kubernetes.io/arch
          operator: In
          values: ["arm64"]
        - key: node.kubernetes.io/instance-type
          operator: In
          values: ["m6g.small", "m6g.medium", "m6g.large", "m6g.xlarge"]
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["spot"]   
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: default
      expireAfter: 720h # 30 * 24h = 720h
  limits:
    cpu: 15
  disruption:
    consolidationPolicy: WhenEmptyOrUnderutilized
    consolidateAfter: 1m
---
apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: default
spec:
  amiFamily: AL2023
  role: "arn:aws:iam::<your account id>:role/eks_role_node_group" # replace with your cluster name
  amiSelectorTerms:
    - id: ami-0c52ae0e8893873d7 #must be AL2023 arm64
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: "dev-cluster" # replace with your cluster name
  securityGroupSelectorTerms:
    - id: sg-0dca8e83c2f54c948 #replace your security group
    - id: sg-0f0875d9a9e986848 #replace your security group
#need off swap linux for kubelet work stable
  userData: |
    #!/bin/bash
    sudo swapoff -a

    

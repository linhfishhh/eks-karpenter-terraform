apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: default
spec:
  template:
    spec:
      requirements:
        - key: karpenter.k8s.aws/instance-category
          operator: In
          values: ["c", "m", "r"]
        - key: karpenter.k8s.aws/instance-size
          operator: In
          values: ["nano", "micro", "small", "medium"]
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["spot"]   
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: default
      expireAfter: 720h # 30 * 24h = 720h
  limits:
    cpu: 15
  disruption:
    consolidationPolicy: WhenEmptyOrUnderutilized
    consolidateAfter: 1m
---
apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: default
spec:
  amiFamily: AL2023
  role: "arn:aws:iam::<your_account_id>:role/eks_role_node_group" # replace with your cluster name
  amiSelectorTerms:
    - id: ami-0167400244e67b63b #must be AL2023 
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: "dev-cluster" # replace with your cluster name
  securityGroupSelectorTerms:
    - id: sg-03ad761dfcf210826 #replace your security group
    - id: sg-00f668de48d188177 #replace your security group
  userData: |
    #!/bin/bash
    sudo swapoff -a

    
